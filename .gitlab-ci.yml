stages:
  - package
  - containerize
  - deploy_k8s
  - cleanup_k8s

variables:
  K8S_NAMESPACE: "assignment-${CI_COMMIT_REF_SLUG}"

package_app:
  stage: package
  tags:
    - ahmad
  script:
    - echo "package the app"
    - COMMIT_DATE=$(date +%y%m%d)
    - SHORT_SHA=$CI_COMMIT_SHORT_SHA
    - NEW_VERSION="${COMMIT_DATE}-${SHORT_SHA}"
    - mvn versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false
    - mvn clean package 
    - echo $NEW_VERSION > version.txt
  artifacts:
    paths:
      - target/*.jar
      - version.txt

containerize_app:
  stage: containerize
  tags:
    - ahmad
  dependencies:
    - package_app
  script:
    - echo "Building Docker image"
    - VERSION=$(cat version.txt)
    - JAR_NAME=assignment-$VERSION.jar
    - docker login -u ps95adagher -p KPMG@1995@ad
    - docker build --build-arg JAR_FILE=target/$JAR_NAME -t ps95adagher/assignment:$VERSION .
    - docker push ps95adagher/assignment:$VERSION
  artifacts:
    paths:
      - target/*.jar
      - version.txt

deploy_k8s:
  stage: deploy_k8s
  tags:
    - ahmad
  dependencies:
    - containerize_app
  script:
    - export KUBECONFIG=/etc/kube/config
    - echo $KUBECONFIG
    - VERSION=$(cat version.txt)
    - echo "Deploying to Kubernetes namespace $K8S_NAMESPACE using Helm"
    - helm install task ./progressoft-app --namespace "$K8S_NAMESPACE" --create-namespace  -f ./progressoft-app/values.yaml 

  only:
    refs:
      - branches
    variables:
      - $CI_COMMIT_BRANCH != "main"
  when: on_success

deploy_k8s_master:
  stage: deploy_k8s
  tags:
    - ahmad
  dependencies:
    - containerize_app
  script:
    - export KUBECONFIG=/etc/kube/config
    - echo $KUBECONFIG
    - VERSION=$(cat version.txt)
    - echo "Deploying to Kubernetes namespace $K8S_NAMESPACE using Helm"
    - helm install task ./progressoft-app --namespace "$K8S_NAMESPACE" --create-namespace  -f ./progressoft-app/values.yaml 

  only:
    refs:
      - main
  when: manual

cleanup_k8s:
  stage: cleanup_k8s
  tags:
    - ahmad
  script:
    - export K8S_NAMESPACE="assignment-${CI_COMMIT_REF_SLUG}"
    - echo "Uninstalling Helm release 'task' from namespace $K8S_NAMESPACE"
    - helm uninstall task --namespace "$K8S_NAMESPACE" || echo "Helm release or namespace not found."
  when: manual
  only:
    - main
